"use strict";angular.module("pbnApp",[]),angular.module("pbnApp").controller("MainCtrl",["$scope",function(a){a.step="load",a.view="",a.status="",a.loaderStyle={border:"4px dashed #777777"},a.palette=[],a.imageLoaded=function(b){var c=new Image;c.src=b,c.onload=function(){var b=document.getElementById("img-canvas");b.width=800;var d=b.width/c.naturalWidth;b.height=c.naturalHeight*d,document.getElementById("canvases").style.height=b.height+"px",a.c=b,a.ctx=b.getContext("2d"),a.ctx.drawImage(c,0,0,b.width,b.height),a.step="select",a.$apply()}},a.addColor=function(b){a.palette.push(b)},a.removeColor=function(b){_.pull(a.palette,b)};var b=function(a,b){for(var c,d=1e6,e=0;e<a.length;e++){var f=a[e],g=Math.pow(f.r-b.r,2)+Math.pow(f.g-b.g,2)+Math.pow(f.b-b.b,2);d>g&&(c=e,d=g)}return c},c=function(a,c){for(var d=[],e=0;e<a.height;e++)d[e]=new Array(a.width);for(var e=0;e<a.data.length;e+=4){var f=b(c,{r:a.data[e],g:a.data[e+1],b:a.data[e+2]}),g=e/4%a.width,h=Math.floor(e/4/a.width);d[h][g]=f}return d},d=function(a,b,c){for(var d=c.createImageData(a[0].length,a.length),e=0;e<a.length;e++)for(var f=0;f<a[0].length;f++){var g=4*(e*a[0].length+f),h=b[a[e][f]];d.data[g]=h.r,d.data[g+1]=h.g,d.data[g+2]=h.b,d.data[g+3]=255}return d},e=function(b,c,e){var f=document.getElementById("filled-canvas");f.width=a.c.width,f.height=a.c.height;var g=f.getContext("2d"),h=d(b,a.palette,g);g.putImageData(h,0,0);var i=document.getElementById("outline-canvas");i.width=f.width,i.height=f.height;var j=[{r:255,g:255,b:255},{r:191,g:191,b:191}],k=i.getContext("2d"),h=d(c,j,k);k.putImageData(h,0,0),k.font="12px Georgia",k.fillStyle="rgb(191, 191, 191)";for(var l=0;l<e.length;l++)k.fillText(e[l].value+1,e[l].x-3,e[l].y+4);a.c2=f,a.c3=i};a.pbnify=function(){a.step="process";var b=a.c.width,d=a.c.height,f=a.ctx.getImageData(0,0,b,d),g=c(f,a.palette),h=new Worker("scripts/processImage.js");h.addEventListener("message",function(b){if("status"==b.data.cmd)a.status=b.data.status,a.$apply();else{var c=b.data.matSmooth,d=b.data.labelLocs,f=b.data.matLine;h.terminate(),e(c,f,d),a.step="result",a.view="filled",a.$apply()}},!1),h.postMessage({mat:g})},a.newImage=function(){a.palette=[],document.getElementById("canvases").style.height="0px",a.step="load"},a.recolor=function(){a.step="select"},a.clearPalette=function(){a.palette=[]},a.viewFilled=function(){a.view="filled"},a.viewOutline=function(){a.view="outline"},a.saveFilled=function(){var b=window.open();b.document.write('<html><head><title>PBN filled</title></head><body><img src="'+a.c2.toDataURL()+'"></body></html>'),b.print()},a.saveOutline=function(){var b=window.open();b.document.write('<html><head><title>PBN outline</title></head><body><img src="'+a.c3.toDataURL()+'"></body></html>'),b.print()},a.savePalette=function(){var b=document.createElement("canvas");b.width=80*Math.min(a.palette.length,10),b.height=80*(Math.floor((a.palette.length-1)/10)+1);var c=b.getContext("2d");c.fillStyle="#ffffff",c.fillRect(0,0,b.width,b.height),c.strokeStyle="#000000";for(var d=0;d<a.palette.length;d++){var e=a.palette[d];c.fillStyle="rgba("+e.r+", "+e.g+", "+e.b+", 255)";var f=80*(d%10),g=80*Math.floor(d/10);c.fillRect(f+10,g+10,60,60),c.fillStyle="#ffffff",c.fillRect(f+10,g+10,20,20),c.font="16px sans-serif",c.fillStyle="#000000",c.textAlign="center",c.fillText(d+1,f+20,g+26),c.strokeRect(f+10,g+10,60,60)}var h=window.open();h.document.write('<html><head><title>PBN palette</title></head><body><img src="'+b.toDataURL()+'"></body></html>'),h.print()}}]),angular.module("pbnApp").directive("stage",function(){return{restrict:"A",link:function(a,b,c){var d=b[0];d.addEventListener("click",function(b){if("select"==a.step){for(var c=d.getBoundingClientRect(),e=b.clientX-c.left,f=b.clientY-c.top,g={r:[],g:[],b:[]},h=e-3;e+3>=h;h++)for(var i=f-3;f+3>=i;i++){var j=a.ctx.getImageData(h,i,1,1).data;g.r.push(j[0]),g.g.push(j[1]),g.b.push(j[2])}var k=function(a){return a.reduce(function(a,b){return a+b},0)/a.length},l={x:e,y:f,r:Math.round(k(g.r)),g:Math.round(k(g.g)),b:Math.round(k(g.b))};a.addColor(l),a.$apply()}})}}}),angular.module("pbnApp").directive("loadFile",function(){return{restrict:"A",scope:{imageLoaded:"&"},link:function(a,b,c){b=b[0],b.ondragover=function(){return b.style.border="4px dashed black",!1},b.ondragleave=function(){return b.style.border="4px dashed #777777",!1},b.ondrop=function(c){c.preventDefault();var d=c.dataTransfer.files[0],e=new FileReader;return e.onloadend=function(b){a.imageLoaded({img:b.target.result}),a.$apply()},e.readAsDataURL(d),b.style.border="4px dashed gray",!1};var d=document.getElementById("fileBrowser");d.addEventListener("change",function(b){var c=d.files[0];if(c.type.match(/image.*/)){var e=new FileReader;e.onloadend=function(b){a.imageLoaded({img:b.target.result}),a.$apply()},e.readAsDataURL(c)}else alert("wrong file format")})}}}),angular.module("pbnApp").run(["$templateCache",function(a){a.put("views/main.html",'<div class="col" id="header"> <img id="title" src="images/logo-02.68992ada.png"> <div id="subtitle">custom paint by number generator</div> </div> <div class="col" id="description"> <p ng-class="{ \'other-step\': step != \'load\' }">1. Load an image</p> <p ng-class="{ \'other-step\': step != \'select\' }">2. Click some points on the image to select your color palette</p> <p ng-class="{ \'other-step\': step != \'select\' || palette.length < 2 }">3. Click PBNify and the image will be converted to a paint by number template</p> <p ng-class="{ \'other-step\': step != \'result\' }">4. Save the outline, print it out, and paint/color it</p> <p ng-class="\'other-step\'"><em>Privacy note: Your image will only be loaded into the browser on your computer. Nothing will be uploaded anywhere.</em></p> </div> <div class="col" id="loader" ng-show="step == \'load\'" ng-style="loaderStyle" image-loaded="imageLoaded(img)" load-file> <p>Drop image here to load,<br>or browse for image.</p> <div type="button" class="btn btn-default"> Browse <input type="file" id="fileBrowser"> </div> </div> <div class="col" id="toolbar"> <div id="buttons" ng-show="step != \'process\'"> <div type="button" class="btn btn-default" ng-click="newImage()" ng-show="step == \'select\' || step == \'result\'">new image</div> <div type="button" class="btn btn-default" ng-click="clearPalette()" ng-show="step == \'select\' && palette.length > 0">clear palette</div> <div type="button" class="btn btn-primary" ng-click="pbnify()" ng-show="step == \'select\' && palette.length > 1">PBNify</div> <div type="button" class="btn btn-default" ng-click="recolor()" ng-show="step == \'result\'">recolor</div> <div class="btn-group" role="group" ng-show="step == \'result\'"> <div type="button" class="btn btn-primary" ng-click="viewFilled()" ng-show="step == \'result\'">filled</div> <a id="save-filled" type="button" class="btn btn-success" ng-click="saveFilled()" target="_blank">save</a> </div> <div class="btn-group" role="group" ng-show="step == \'result\'"> <div type="button" class="btn btn-primary" ng-click="viewOutline()" ng-show="step == \'result\'">outline</div> <a id="save-outline" type="button" class="btn btn-success" ng-click="saveOutline()" target="_blank">save</a> </div> <a id="save-palette" type="button" class="btn btn-success" ng-click="savePalette()" ng-show="step == \'result\'" target="_blank">save palette</a> </div> <div ng-show="step == \'process\'"><img id="spinner" src="images/spinner.a30ec9e1.png"> {{ status }}</div> </div> <div class="col" id="palette"> <div class="swatch" ng-repeat="color in palette" ng-style="{ \'background-color\': \'rgb(\' + color.r + \',\' + color.g + \',\' + color.b + \')\' }"> <div class="swatch-label" ng-show="step == \'result\' && view == \'outline\'">{{ $index + 1 }}</div> <img ng-click="removeColor(color)" ng-show="step == \'select\'" src="images/delete.5b7e68e2.png"> </div> </div> <div class="col" id="canvases"> <div class="canvas-container" ng-show="step == \'select\' || step == \'process\'"> <canvas id="img-canvas" stage></canvas> <div class="sample-point" ng-repeat="color in palette" ng-style="{ left: (color.x - 5) + \'px\', top: (color.y - 5) + \'px\' }"></div> </div> <div class="canvas-container" ng-show="step == \'result\' && view == \'filled\'"> <canvas id="filled-canvas" result></canvas> </div> <div class="canvas-container" ng-show="step == \'result\' && view == \'outline\'"> <canvas id="outline-canvas" result></canvas> </div> </div> <div class="col" id="footer"> <p>Email <a href="mailto:munro.daniel@gmail.com">munro.daniel@gmail.com</a> with questions, comments, or bug reports.</p> </div>')}]);